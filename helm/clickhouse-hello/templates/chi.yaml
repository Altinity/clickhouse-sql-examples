# ClickHouse using default storage class. 
apiVersion: "clickhouse.altinity.com/v1"
kind: "ClickHouseInstallation"
metadata:
  name: "{{ .Values.clickhouse.name }}"
  labels:
    application_group: "{{ .Values.all.metadata.labels.application_group }}"
spec:
  configuration:
    clusters:
      - name: "{{ .Values.clickhouse.cluster.name }}"
        layout:
          replicasCount: {{ .Values.clickhouse.cluster.replicasCount }}
          shardsCount: {{ .Values.clickhouse.cluster.shardsCount }}
        templates:
          podTemplate: replica
          volumeClaimTemplate: storage
    zookeeper:
        nodes:
        - host: "keeper-{{ .Values.keeper.name }}s"
          port: 2181
    users:
      {{ .Values.clickhouse.user.login }}/networks/ip: "::/0"
      {{ .Values.clickhouse.user.login }}/password:
        valueFrom:
          secretKeyRef:
            name: clickhouse-{{ .Values.clickhouse.name }}
            key: password
      {{ .Values.clickhouse.user.login }}/profile: "default"
      {{ .Values.clickhouse.user.login }}/access_management: 1
  defaults:
    templates:
      serviceTemplate: service-template
      clusterServiceTemplate: cluster-service-template
      replicaServiceTemplate: replica-service-template
  templates:
    podTemplates:
      - name: replica
        spec:
          containers:
          - name: clickhouse
            image: "{{ .Values.clickhouse.pod.image }}"
    volumeClaimTemplates:
      - name: storage
        reclaimPolicy: Retain
        metadata:
          labels:
            application_group: "{{ .Values.all.metadata.labels.application_group }}"
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: "{{ .Values.clickhouse.volume.storage }}"
    serviceTemplates:
      - name: service-template
        generateName: "clickhouse-{chi}"
        metadata:
          labels:
            application_group: "{{ .Values.all.metadata.labels.application_group }}"
        spec:
          ports:
            - name: http
              port: 8123
            - name: tcp
              port: 9000
          type: "{{ .Values.clickhouse.service.type }}"
          clusterIP: None
      - name: cluster-service-template
        generateName: "clickhouse-{chi}-{cluster}"
        metadata:
          labels:
            application_group: "{{ .Values.all.metadata.labels.application_group }}"
        spec:
          ports:
            - name: http
              port: 8123
            - name: tcp
              port: 9000
          type: ClusterIP
          clusterIP: None
      - name: replica-service-template
        generateName: "clickhouse-{chi}-{cluster}-{shard}-{replica}"
        metadata:
          labels:
            application_group: "{{ .Values.all.metadata.labels.application_group }}"
        spec:
          ports:
            - name: http
              port: 8123
            - name: tcp
              port: 9000
          type: ClusterIP
          clusterIP: None
